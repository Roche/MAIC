% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weights.R
\name{profile_wts}
\alias{profile_wts}
\title{Produce a data frame of the weights assigned to patient profiles}
\usage{
profile_wts(data, wt_col = "wt", wt_rs = "wt_rs", vars)
}
\arguments{
\item{data}{A data frame containing individual patient data from
the intervention study, including a column containing the weights (derived
using \code{\link{estimate_weights}}).}

\item{wt_col}{The name of the weights column in the data frame containing the
intervention individual patient data and the MAIC propensity weights. The
default is wt.}

\item{wt_rs}{The name of the rescaled weights column in the data frame
containing the intervention individual patient data and the MAIC propensity
weights. The default is wt_rs.}

\item{vars}{A character vector giving the variable names of the baseline
characteristics (not centered). These names must match the column names in
the data.}
}
\value{
A data frame that includes a summary of patient characteristics
  associated with each weight value.
}
\description{
Select the patient characteristics used in the matching and the MAIC weights
and output a data frame of unique propensity weight values with the
associated summary baseline characteristics. This data frame helps to
understand how different patient profiles are contributing to the analyses by
illustrating the patient characteristics associated with different weight
values. For example, min, max and median weights. This function is most
useful when only matching on binary variables as there are fewer unique
values.
}
\examples{

# This example code uses the weighted individual patient data, outputted from
# the estimate_weights function to perform weight diagnostics. The weighted data
# is saved within est_weights. To check the weighted aggregate baseline
# characteristics for 'intervention' match those in the comparator data,
# standardized data "target_pop_standard" is used. Please see the package
# vignette for more information on how to use the estimate_weights function and
# derive the "target_pop_standard" data.

library(dplyr)
library(MAIC)

# load est_weights
data(est_weights, package = "MAIC")

# load target_pop_standard
data(target_pop_standard, package = "MAIC")

# List out the uncentered variables used in the matching
match_cov <- c("AGE",
               "SEX",
               "SMOKE",
               "ECOG0")

# Are the weights sensible? ----------------------------------------------------

# The wt_diagnostics function requires the output from the estimate_weights
# function and will output:
# - the effective sample size (ESS)
# - a summary of the weights and rescaled weights (mean, standard deviation,
#   median, minimum and maximum)
# - a unique set of weights with the corresponding patient profile based on the
#   matching variables

diagnostics <- wt_diagnostics(est_weights$analysis_data,
                              vars = match_cov)
diagnostics$ESS
diagnostics$Summary_of_weights
diagnostics$Weight_profiles

# Each of the wt_diagnostics outputs can also be estimated individually
ESS <- estimate_ess(est_weights$analysis_data)
weight_summ <- summarize_wts(est_weights$analysis_data)
wts_profile <- profile_wts(est_weights$analysis_data, vars = match_cov)

# Plot histograms of unscaled and rescaled weights
# bin_width needs to be adapted depending on the sample size in the data set
histogram <- hist_wts(est_weights$analysis_data, bin = 50)
histogram


# Has the optimization worked? -------------------------------------------------

# The following code produces a summary table of the intervention baseline
# characteristics before and after matching compared with the comparator
# baseline characteristics:

check_weights(analysis_data = est_weights$analysis_data, matching_vars = match_cov, 
                          target_pop_standard = target_pop_standard)
}
\seealso{
\code{\link{estimate_weights}}
}
